<!DOCTYPE html>
<html>
  <head>
  <title>{{title}}</title>
  <base href="{{host}}">
  <link href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css" rel="stylesheet">
  <link href="css/ripples.min.css" rel="stylesheet">
  <link href="css/material-wfont.css" rel="stylesheet">
  <link rel="stylesheet" href="css/jquery.gridster.min.css">
  <link rel="stylesheet" href="css/style.css">
  </head>
  <body>
    <div class="navbar navbar-default navbar-fixed-top">
      <div id="toolbar" class="container-fluid">
        <div class="navbar-header">
          <button type="button" class="mdi-navigation-more-vert mdi-material-lightgrey navbar-toggle" data-toggle="collapse" data-target=".navbar-responsive-collapse">
          </button>
          <a class="navbar-brand" href="">Annie</a>
        </div>
        <nav class="navbar-collapse collapse navbar-responsive-collapse">
          <ul class="nav navbar-nav">
            {{link-to 'Home' ''}}
            {{link-to 'Applications' 'applications'}}
            {{link-to 'Developer' 'developer'}}
          </ul>
          <ul class="nav navbar-nav navbar-right">
            {{#if session.authenticated}}
              <li><p class="navbar-text"> {{session.user.email}}</p></li>
            {{else}}
              {{link-to 'Login' 'login'}}
            {{/if}}
          </ul>
        </nav>
      </div>
    </div>
    <main class="container-fluid">
      {{{body}}}
    </main>
    <script src="sdk/browser/annie.min.js"></script>
    <script src="//code.jquery.com/jquery-1.10.2.min.js"></script>
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>

    <script src="js/ripples.min.js"></script>
    <script src="js/material.min.js"></script>
    <script src="js/jquery.gridster.with-extras.min.js"></script>
    <script src="js/Chart.js"></script>

    <script>
      $(document).ready(function() {
        $.material.init();
      });
      $(window).scroll(function(){
        $('#toolbar').addClass('scrolled');

        if ($(this).scrollTop() === 0){
          $('#toolbar').removeClass('scrolled');
        }
      });

      var dashboardItemClickHandler = function(event){
        var $item = $(event.delegateTarget);
        if ($item.hasClass('player-revert')){
          return false;
        }

        alert($item.data('metric-id'));
      }

      var gridster;
      $(document).ready(function(){
        gridster = $(".gridster > ul").gridster({
          // widget_margins: [10, 10],
          // widget_base_dimensions: [400, 140],
          max_cols: 3,
          resize: {
            enabled: false,
            // max_size: [3, 3],
            // min_size: [1, 1],
            resize: function(e, ui, $widget){
              $widget.find('.metric-flot').data('chart').resize();
            }
          },
          draggable: {
            start: function(e, ui){
              $(ui.$player[0]).addClass('shadow-z-1');
            }
          }
        }).data('gridster');
      });

      $('.dashboard-item').each(function(i, e){
        var $item = $(e);
        $item.on('transitionend', function(event){
          $item.removeClass('shadow-z-1');
          // player-revert is a gridster class that marks the last moved element
          $item.removeClass('player-revert');
        });
        $item.on('click', dashboardItemClickHandler);
      });

      $(document).ready(function(){
        Chart.defaults.global.maintainAspectRatio = false;
        Chart.defaults.global.responsive = true;
        Chart.defaults.global.animation = false;

        var drawCharts = function(){
          $('.metric-flot').each(function(i, e){
            var data = JSON.parse($(e).find('.metric-data').html());
            var metricType = $(e).data('metric-type');
            var options = {
              bezierCurve: false,
              datasetFill: false
            };

            var canvas = $(e).find('canvas');
            var width = canvas.parent().width();
            canvas.attr('width', width);
            var ctx = canvas.get(0).getContext('2d');
            var chart;
            switch (metricType) {
              case 'line':
                chart = new Chart(ctx).Line({
                  labels: data.labels,
                  datasets: [
                    {
                      pointColor: '#4285f4',
                      data: data.data
                    }
                  ]
                }, options);
                break;
              case 'bar':
                chart = new Chart(ctx).Bar({
                  labels: data.labels,
                  datasets: [
                    {
                      pointColor: '#4285f4',
                      data: data.data
                    }
                  ]
                }, options);
                break;
              case 'pie':
                // use circumference to compute %
                options.tooltipTemplate = '<%if (label){%><%=label%>: <%}%><%= circumference / (Math.PI * 2) * 100 %>%';
                var colors = [ '#5B90BF', '#96b5b4', '#a3be8c', '#ab7967', '#d08770', '#b48ead' ];
                data.forEach(function(datum, i){
                  datum.color = colors[i % colors.length];
                });
                chart = new Chart(ctx).Pie(data, options);
                // var img = $('<img>');
                // img.attr('src', pieChart.toBase64Image());
                // canvas.after(img);
                var legend = $(chart.generateLegend());
                $(e).find('.legend').append(legend);
                break;
            }
            $(e).data('chart', chart);
          });
        }
        drawCharts();
      });

      $('#loginPassword').focusin(function(){
        $('#owl-login').addClass('password');
      });
      $('#loginPassword').focusout(function(){
        $('#owl-login').removeClass('password');
      });
    </script>
  </body>
</html>